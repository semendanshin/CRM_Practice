version: "0.1"


services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", --root-path, "/api/v1"]
    restart: unless-stopped
  tg-bot:
    build:
      context: ./client-bot
      dockerfile: Dockerfile
    container_name: tg-bot
    env_file:
      - ./client-bot/.env
    volumes:
      - ./client-bot/database:/code/database
    command: ["python", "main.py"]
    restart: unless-stopped
  ml-service:
    build:
      context: ./ml
      dockerfile: Dockerfile
    container_name: ml-service
    ports:
      - "5000:8000"
    env_file:
      - ./ml/.env
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", --root-path, "/ml"]
    restart: unless-stopped
  nginx:
    image: nginx:latest
    container_name: reverse_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - ml-service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "8060:8000"
    env_file:
      - ./frontend/.env
    restart: unless-stopped
    command: ["python", "main.py"]